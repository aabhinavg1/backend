#pragma once

#include "oatpp/Types.hpp"
#include "oatpp/macro/codegen.hpp"
#include OATPP_CODEGEN_BEGIN(DTO)

/**
 *  Data Transfer Object. Object containing fields only.
 *  Used in API for serialization/deserialization and validation
 */
class ResponseDTO : public oatpp::DTO {
  DTO_INIT(ResponseDTO, DTO);

  DTO_FIELD(Int16, status_code, "statusCode");
  DTO_FIELD(String, message);
  DTO_FIELD(Any, data);

  ResponseDTO() {
    status_code = 200;
    message = "success";
  }

  ResponseDTO(int16_t status_code, std::string&& message) {
    this->status_code = status_code;
    this->message = message.empty() ? "success" : std::move(message);
  }
  ResponseDTO(int16_t status_code, const std::string& message) {
    this->status_code = status_code;
    this->message = message.empty() ? "success" : message;
  }

  ResponseDTO(Any&& data) : data(std::move(data)) {
    status_code = 200;
    message = "success";
  }
  ResponseDTO(const Any& data) : data(data) {
    status_code = 200;
    message = "success";
  }

  ResponseDTO(std::string&& message) {
    if (message.empty()) {
      this->message = "success";
      status_code = 200;
    } else {
      this->message = std::move(message);
      status_code = 404;
    }
  }

  ResponseDTO(const std::string& message) {
    if (message.empty()) {
      this->message = "success";
      status_code = 200;
    } else {
      this->message = message;
      status_code = 404;
    }
  }
};

#include OATPP_CODEGEN_END(DTO)
